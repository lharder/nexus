require( "deflibs.defold" )

local Game = require( "nexus.game" )
local Lua = require( "deflibs.lualib" )
local Host = require( "nexus.host" )
local ConStack = require( "main.constack" )

local Serializable = require( "nexus.serializable" )
local Envelope = require( "nexus.envelope" )

-- global ---------------------------
GAME = Game.new( "MultiPlayerGame" )

-- Log all print messages to game console as well
LOG = ConStack.new( 10 )
local _pprint = pprint

function pprint( msg )
	_pprint( msg )
	LOG:push( msg )
end

function print( msg )
	pprint( msg )
end
---------------------------------------------------


-------------------------------------


function init( self )
	Lua.randomize()
	msg.post( "main:/screenmaster", "load", { level = "setup" } ) 
	
	--[[ ------------------
	local ser = Serializable.new()
	ser:put( "gid", "playerA" )
	ser:put( "pos", go.get_position() )
	ser:put( "rot", go.get_rotation() ) 
	
	local now = socket.gettime()
	for i = 1, 100000, 1 do
		obj = Serializable.deserialize( ser:serialize() )
	end
	local syncTime = socket.gettime() - now
	pprint( "Serializable: " .. syncTime .. " sec" )

	pprint( obj )
	pprint( ser:serialize() )
	
	----
	local ser = SerializableOld.new()
	ser:putString( "gid", "playerA" )
	ser:putVector3( "pos", go.get_position() )
	ser:putQuat( "rot", go.get_rotation() )

	local now = socket.gettime()
	for i = 1, 100000, 1 do
		obj = SerializableOld.deserialize( ser:serialize() )
	end
	local syncTime = socket.gettime() - now
	pprint( "SerializableOld: " .. syncTime .. " sec" )
	--]]
	
end

