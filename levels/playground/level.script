local nexus = require( "main.gameserver" )

local MSG_PAUSE = hash( "pause" )
local MSG_UNPAUSE = hash( "unpause" )



function init( self )
	nexus:readytoplay( function() 
		local heromain = "/factories#heromain" 
		local herodrone = "/factories#herodrone"
		local pos = vmath.vector3( math.random( 100, 900 ), math.random( 100, 500 ), .5 )

		-- avoid syncing every shot: self-contained, simple logic on all hosts
		nexus:setSyncProvider( nil, "/factories#shot" )
		
		nexus:addEventListener( "pause", function( params ) 
			pprint( "Global event: Triggered pause!" ) 
			msg.post( "#pause", MSG_PAUSE, { callsign = params.causedby.callsign })
		end )

		nexus:addEventListener( "unpause", function( params ) 
			pprint( "Global event: Stop pause and proceed!" ) 
			msg.post( "#pause", MSG_UNPAUSE, { callsign = params.causedby.callsign })
		end )
		
		local heroGid = nexus:makeGid( "hero" )
		self.hero = nexus:newEntity( heroGid, heromain, herodrone, pos, nil, {
			callsign = nexus:me().profile.callsign,
			gid = heroGid,
			turnrate = 3,
			speed = 300,
			health = 100
		})

		pprint( ">>>>>>>>>>   PLAYING   <<<<<<<<<<" )
		-- pprint( nexus:me().profile )
	end )
end


function update( self, dt )
	if nexus then nexus:update( dt ) end
end

