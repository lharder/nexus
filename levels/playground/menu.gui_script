local nexus = require( "main.gameserver" )

local ACTION_TOUCH = hash( "touch" )
local ACTION_MULTI_TOUCH = hash( "touch_multi" )
local ACTION_BUTTON_CLICKED = hash( "btnClicked" )
local ACTION_KEY_PRESSED = hash( "text" )


local function guiIsClicked( node, action_id, action )
	if node == nil then return false end
	if action_id == ACTION_TOUCH then 
		return gui.is_enabled( node ) and gui.pick_node( node, action.x, action.y ) 
	end
	return false
end


---------------------------
function init( self )
	msg.post( ".", "acquire_input_focus" )
	gui.hide_keyboard()

	self.nBtnFire = gui.get_node( "btnFire" )	
	self.nBtnSrv = gui.get_node( "btnSrv" )	

	self.cooldown = socket.gettime()
	
	nexus:readytoplay( function() 
		local heroGid = nexus:makeGid( "hero" )
		self.heroId = nexus:getId( heroGid )
	end )
end


function on_input( self, action_id, action )
	-- single touch
	if guiIsClicked( self.nBtnFire, action_id, action ) or action_id == ACTION_KEY_PRESSED then 
		if socket.gettime() > self.cooldown then 
			self.cooldown = socket.gettime() + .1
			msg.post( self.heroId, ACTION_BUTTON_CLICKED, action )
		end
		
	elseif guiIsClicked( self.nBtnSrv, action_id, action ) then 
		if socket.gettime() > self.cooldown then 
			self.cooldown = socket.gettime() + .5
			
			if self.srvstopped then 
				self.srvstopped = false
				nexus.cmdsrv.tcpsrv.start()
				gui.set_text( self.nBtnSrv , "Halt Srv" )
		
			else
				self.srvstopped = true
				nexus.cmdsrv.tcpsrv.stop()
				gui.set_text( self.nBtnSrv , "Restart Srv" )
				
			end
		end

	elseif action_id == ACTION_TOUCH then 
		self.cooldown = socket.gettime() + .1
		msg.post( self.heroId, ACTION_TOUCH, action )
	end
	
	-- multi touch
	if action_id == ACTION_MULTI_TOUCH then 
		for i, touch in ipairs( action.touch ) do
			if guiIsClicked( self.nBtnFire, ACTION_TOUCH, touch ) then 
				if socket.gettime() > self.cooldown then 
					self.cooldown = socket.gettime() + .1
					msg.post( self.heroId, ACTION_BUTTON_CLICKED, touch )
				end
			else
				msg.post( self.heroId, ACTION_TOUCH, touch )
			end
		end
	end
	
	return true

end



function final( self )
	msg.post( ".", "release_input_focus" )
end

