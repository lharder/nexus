
local nexus = require( "main.gameserver" )

local MSG_PAUSE 	= hash( "pause" )
local MSG_UNPAUSE 	= hash( "unpause" )
local ACTION_TOUCH 	= hash( "touch" )


local function guiIsClicked( node, action_id, action )
	if node == nil then return false end
	if action_id == ACTION_TOUCH then 
		return gui.is_enabled( node ) and gui.pick_node( node, action.x, action.y ) 
	end
	return false
end


local function freeze( self, message )
	msg.post( "main:/levels#playground", "set_time_step", { factor = 0, mode = 0 } )

	gui.set_text( self.dialogTxt, ( self.tmpl ):format( message.callsign, message.callsign ) )
	gui.set_enabled( self.btnAbort, true )
	gui.set_enabled( self.dialog, true )
end


local function unfreeze( self )
	msg.post( "main:/levels#playground", "set_time_step", { factor = 1, mode = 0 } )

	gui.set_enabled( self.btnAbort, false )
	gui.set_enabled( self.dialog, false )
end



-- methods ----------------------
function init( self )
	self.dialog = gui.get_node( "dialog" )
	self.dialogTxt = gui.get_node( "dialogTxt" )
	self.btnAbort = gui.get_node( "btnAbort" )

	self.tmpl = gui.get_text( self.dialogTxt )

	gui.set_enabled( self.btnAbort, false )
	gui.set_enabled( self.dialog, false )
end


function on_message( self, message_id, message, sender )
	if message_id == MSG_PAUSE then 
		freeze( self, message )
		
	elseif message_id == MSG_UNPAUSE then 
		unfreeze( self )
	end
end


function on_input( self, action_id, action )
	if guiIsClicked( self.btnAbort, action_id, action ) then 
		unfreeze( self )
		pprint( "Now aborting game..." )
	end
end 




